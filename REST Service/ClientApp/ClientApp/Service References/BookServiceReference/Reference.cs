//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApp.BookServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Rameshkartik.WCFSamples.REST")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookPrice {
            get {
                return this.BookPriceField;
            }
            set {
                if ((this.BookPriceField.Equals(value) != true)) {
                    this.BookPriceField = value;
                    this.RaisePropertyChanged("BookPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookServiceReference.IBook")]
    public interface IBook {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/GetBookDetails", ReplyAction="http://tempuri.org/IBook/GetBookDetailsResponse")]
        ClientApp.BookServiceReference.Book[] GetBookDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/GetBookDetails", ReplyAction="http://tempuri.org/IBook/GetBookDetailsResponse")]
        System.Threading.Tasks.Task<ClientApp.BookServiceReference.Book[]> GetBookDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/GetBook", ReplyAction="http://tempuri.org/IBook/GetBookResponse")]
        ClientApp.BookServiceReference.Book GetBook(int BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/GetBook", ReplyAction="http://tempuri.org/IBook/GetBookResponse")]
        System.Threading.Tasks.Task<ClientApp.BookServiceReference.Book> GetBookAsync(int BookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/AddBook", ReplyAction="http://tempuri.org/IBook/AddBookResponse")]
        void AddBook(ClientApp.BookServiceReference.Book BookObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/AddBook", ReplyAction="http://tempuri.org/IBook/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(ClientApp.BookServiceReference.Book BookObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/UpdateBook", ReplyAction="http://tempuri.org/IBook/UpdateBookResponse")]
        void UpdateBook(ClientApp.BookServiceReference.Book BookObjectUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBook/UpdateBook", ReplyAction="http://tempuri.org/IBook/UpdateBookResponse")]
        System.Threading.Tasks.Task UpdateBookAsync(ClientApp.BookServiceReference.Book BookObjectUpdate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookChannel : ClientApp.BookServiceReference.IBook, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookClient : System.ServiceModel.ClientBase<ClientApp.BookServiceReference.IBook>, ClientApp.BookServiceReference.IBook {
        
        public BookClient() {
        }
        
        public BookClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientApp.BookServiceReference.Book[] GetBookDetails() {
            return base.Channel.GetBookDetails();
        }
        
        public System.Threading.Tasks.Task<ClientApp.BookServiceReference.Book[]> GetBookDetailsAsync() {
            return base.Channel.GetBookDetailsAsync();
        }
        
        public ClientApp.BookServiceReference.Book GetBook(int BookId) {
            return base.Channel.GetBook(BookId);
        }
        
        public System.Threading.Tasks.Task<ClientApp.BookServiceReference.Book> GetBookAsync(int BookId) {
            return base.Channel.GetBookAsync(BookId);
        }
        
        public void AddBook(ClientApp.BookServiceReference.Book BookObject) {
            base.Channel.AddBook(BookObject);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(ClientApp.BookServiceReference.Book BookObject) {
            return base.Channel.AddBookAsync(BookObject);
        }
        
        public void UpdateBook(ClientApp.BookServiceReference.Book BookObjectUpdate) {
            base.Channel.UpdateBook(BookObjectUpdate);
        }
        
        public System.Threading.Tasks.Task UpdateBookAsync(ClientApp.BookServiceReference.Book BookObjectUpdate) {
            return base.Channel.UpdateBookAsync(BookObjectUpdate);
        }
    }
}
